When we perform concatenation, we get a copy of the original sequence, always.
	True/False? : True

Which of the following are expressions?
	x==5	x=5		x+= 5		for x in range(5): print(x)
	^ This one

Consider the each of the following individually. Are they (R) Reassigning xs or
(U) updating xs?
	xs[3] = 6				# U
	xs[3] = [4]				# U
	xs	  = [8,9,10,11,12]	# R
	xs[:] = [8,9,10,11,12]	# U

Generate the following sequences of numbers by writing calls to the range()
function.
	[0,2,4,6,8,10]		#range(0,11,2)
	[5,4,3,2,1,0]		#range(5,-1,-1)
	[-1,-2,-3,-4,-5]	#range(-1,-6,-1)

Consider the following definitions:
tup = ( (), [], ("bob",90),(23,"duck") )
xs  = [1,2,(3,),[7,8,9],10+11,12,"yes",14,"15]
string = "32 doggies"
	What are the resulting values of the following expressions?
		xs[4]			#21
		tup[1:3][1][-1]	#90
		tup[xs[1][0]	#"bob"
	What are the resulting types of the following expressions?
		xs[2:3]						#list | A slice always returns the type it
									#		sliced into
		tup[3][1]					#string
		tup[int(string[0:2][:][1])]	#tuple

Consider the following code. What is printed when the code runs?
	xs = [5,7]
	ys = xs*2
	xs[1] = 6
	print(xs)
	print(ys)

	#[5,6]
	#[5,7,5,7]

Assume xs is a list containing one or more integers. Write code that will print
out the index of the smallest integers in the list. Your response should report
the zero-indexed location just like Python. For instance, if the list happened to
contain [7,3,5,9,2,3], the your code would print a 4. (This is just an example -
Write code that works regardless of the integers in xs.) In case of a tie, you
you can report any index of a co-lowest score (though usually the first one would
be reported). You may use relational operators, but you may not use any functions
or methods related to sorting, indexing, or ordering (like sort, index, max/min).

def minindex(xs):
	minnum=xs[0] # This is a safe starting value, because you are picking a value
				 # Within the provided list.
	minindice=[]
	for i in xs:
	if i < minnum:
		minnum = i
	j = 0
	while j < len(xs):
		if xs[j] == minnum:
			minindice.append(j)
		j += 1
	return minindice
print(minindex(xs))
